From 5c604dfca70684adc798d4b723a39bb6c275b53f Mon Sep 17 00:00:00 2001
From: Daniel Mueller <deso@posteo.net>
Date: Fri, 12 Oct 2018 22:12:29 -0700
Subject: [PATCH 1/3] Allow for importing of multiple .ics files at once

When working with large numbers of .ics files at once, Thunderbird's
one-file-at-a-time approach to importing them is limiting severely and
simply unfeasible.
Hence, with this change we adjust the import logic to allow for the
selection of multiple files at once. We factor out a function for
importing a single file and invoke this method for all files reported as
being selected.
---
 comm/calendar/base/content/import-export.js | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/comm/calendar/base/content/import-export.js b/comm/calendar/base/content/import-export.js
index 22c17b..210ac3 100644
--- a/comm/calendar/base/content/import-export.js
+++ b/comm/calendar/base/content/import-export.js
@@ -23,7 +23,7 @@ var MODE_TRUNCATE = 0x20;
  */
 function loadEventsFromFile(aCalendar) {
   let picker = Cc["@mozilla.org/filepicker;1"].createInstance(Ci.nsIFilePicker);
-  picker.init(window, cal.l10n.getCalString("filepickerTitleImport"), Ci.nsIFilePicker.modeOpen);
+  picker.init(window, cal.l10n.getCalString("filepickerTitleImport"), Ci.nsIFilePicker.modeOpenMultiple);
   picker.defaultExtension = "ics";
 
   // Get a list of importers
@@ -52,17 +52,20 @@ function loadEventsFromFile(aCalendar) {
   }
 
   picker.open(rv => {
-    if (rv != Ci.nsIFilePicker.returnOK || !picker.file || !picker.file.path) {
+    if (rv != Ci.nsIFilePicker.returnOK || !picker.files) {
       return;
     }
 
+    let files = picker.files;
+    while (files.hasMoreElements()) {
+    let file = files.getNext();
     let filterIndex = picker.filterIndex;
     if (picker.filterIndex < 0 || picker.filterIndex > contractids.length) {
       // For some reason the wrong filter was selected, assume default extension
       filterIndex = defaultCIDIndex;
     }
 
-    let filePath = picker.file.path;
+    let filePath = file.path;
     let importer = Cc[contractids[filterIndex]].getService(Ci.calIImporter);
 
     let inputStream = Cc["@mozilla.org/network/file-input-stream;1"].createInstance(
@@ -72,7 +75,7 @@ function loadEventsFromFile(aCalendar) {
     let exception;
 
     try {
-      inputStream.init(picker.file, MODE_RDONLY, parseInt("0444", 8), {});
+      inputStream.init(file, MODE_RDONLY, parseInt("0444", 8), {});
       items = importer.importFromStream(inputStream, {});
     } catch (ex) {
       exception = ex;
@@ -121,6 +124,7 @@ function loadEventsFromFile(aCalendar) {
         args
       );
     }
+    }
   });
 }
 
-- 
2.23.0

