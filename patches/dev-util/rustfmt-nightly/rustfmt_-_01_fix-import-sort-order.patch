From a0d72f4bf8c39bbbab7d76656653cca07c65710a Mon Sep 17 00:00:00 2001
From: Daniel Mueller <deso@posteo.net>
Date: Sun, 21 Oct 2018 12:58:22 -0700
Subject: [PATCH 1/3] Fix import sort order

When reformatting imports, rustfmt takes into consideration the casing
of the item imported and treats all uppercase items with preference. We
do not want such a special treatment. Items should be sorted based
solely on the letter and not its casing.
This change adjusts rustfmt to change sorting of imports to this simpler
scheme.
---
 src/imports.rs | 15 +--------------
 1 file changed, 1 insertion(+), 14 deletions(-)

diff --git a/src/imports.rs b/src/imports.rs
index b3408b..d4714f 100644
--- a/src/imports.rs
+++ b/src/imports.rs
@@ -603,20 +603,7 @@ impl Ord for UseSegment {
             (&Slf(ref a), &Slf(ref b)) | (&Super(ref a), &Super(ref b)) => a.cmp(b),
             (&Glob, &Glob) => Ordering::Equal,
             (&Ident(ref ia, ref aa), &Ident(ref ib, ref ab)) => {
-                // snake_case < CamelCase < UPPER_SNAKE_CASE
-                if ia.starts_with(char::is_uppercase) && ib.starts_with(char::is_lowercase) {
-                    return Ordering::Greater;
-                }
-                if ia.starts_with(char::is_lowercase) && ib.starts_with(char::is_uppercase) {
-                    return Ordering::Less;
-                }
-                if is_upper_snake_case(ia) && !is_upper_snake_case(ib) {
-                    return Ordering::Greater;
-                }
-                if !is_upper_snake_case(ia) && is_upper_snake_case(ib) {
-                    return Ordering::Less;
-                }
-                let ident_ord = ia.cmp(ib);
+                let ident_ord = ia.to_lowercase().cmp(&ib.to_lowercase());
                 if ident_ord != Ordering::Equal {
                     return ident_ord;
                 }
-- 
2.18.1

