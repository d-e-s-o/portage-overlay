From 62d1ef0611651293bdd8c356d7f39ba9d405264e Mon Sep 17 00:00:00 2001
From: Daniel Mueller <deso@posteo.net>
Date: Fri, 11 Dec 2015 18:49:06 -0800
Subject: [PATCH 2/3] Reduce memory footprint by employing malloc_trim

When tmux is used in conjunction with a lot of sessions/windows with a
potentially huge history, memory usage by tmux can become excessive.
Apparently, this it's less the fact that tmux is a memory hog or that it
actually leaks but rather that glibc's malloc fails to free the memory
back to the system in a timely manner.
This change employs malloc_trim(3) to advice glibc to free memory back
to the system in an attempt to reduce the overall memory footprint. The
patch was originally devised by 42wim [1] and slightly adapted to work
with more recent versions of tmux.

[1] http://blog.42.be/2015/02/tmux-memory-usage-on-linux.html
---
 grid.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/grid.c b/grid.c
index e4ba7d..c45ab1 100644
--- a/grid.c
+++ b/grid.c
@@ -20,6 +20,9 @@
 
 #include <stdlib.h>
 #include <string.h>
+#ifdef __GLIBC__
+# include <malloc.h>
+#endif
 
 #include "tmux.h"
 
@@ -243,6 +246,10 @@ grid_destroy(struct grid *gd)
 	free(gd->linedata);
 
 	free(gd);
+
+#ifdef M_TRIM_THRESHOLD
+	malloc_trim(0);
+#endif
 }
 
 /* Compare grids. */
@@ -330,6 +337,10 @@ grid_clear_history(struct grid *gd)
 	memmove(&gd->linedata[0], &gd->linedata[gd->hsize],
 	    gd->sy * (sizeof *gd->linedata));
 
+#ifdef M_TRIM_THRESHOLD
+	malloc_trim(0);
+#endif
+
 	gd->hscrolled = 0;
 	gd->hsize = 0;
 
-- 
2.18.0

