From 6f2d308c7a0cdff8c64f36e81efade73bcc44089 Mon Sep 17 00:00:00 2001
From: deso <deso@posteo.net>
Date: Fri, 11 Dec 2015 18:48:30 -0800
Subject: [PATCH] work around automatic window renaming

When a root shell is started in tmux every command (even a single
return) changes the window title back to the current working directory.
This fact is very annoying because it means that properly named windows
will always revert their name under such circumstances.
This change introduces a patch that works around this issue.
Essentially, once the user has changed the window's name, all automatic
renaming is prohibited from taking place.

Note that it is still unclear as to why only windows where a new shell
is started indirectly (by means of the su command, for instance) seem to
have this issue, and not all windows. The reason seems to be some shell
interna but the exact details are unknown.
---
 cmd-new-window.c    | 8 +++++++-
 cmd-rename-window.c | 1 +
 input.c             | 2 ++
 options-table.c     | 6 ++++++
 4 files changed, 16 insertions(+), 1 deletion(-)

diff --git a/cmd-new-window.c b/cmd-new-window.c
index c10a4a..41ec4e 100644
--- a/cmd-new-window.c
+++ b/cmd-new-window.c
@@ -61,6 +61,7 @@ cmd_new_window_exec(struct cmd *self, struct cmdq_item *item)
 	int			 argc, detached;
 	struct environ_entry	*envent;
 	struct cmd_find_state	 fs;
+	const char *name;
 
 	if (args_has(args, 'a')) {
 		if ((idx = winlink_shuffle_up(s, wl)) == -1) {
@@ -123,13 +124,18 @@ cmd_new_window_exec(struct cmd *self, struct cmdq_item *item)
 
 	if (idx == -1)
 		idx = -1 - options_get_number(s->options, "base-index");
-	wl = session_new(s, args_get(args, 'n'), argc, argv, path, cwd, idx,
+	name = args_get(args, 'n');
+	wl = session_new(s, name, argc, argv, path, cwd, idx,
 		&cause);
 	if (wl == NULL) {
 		cmdq_error(item, "create window failed: %s", cause);
 		free(cause);
 		goto error;
 	}
+
+	if (name != NULL)
+		options_set_number(wl->window->options, "user-renamed", 1);
+
 	if (!detached) {
 		session_select(s, wl->idx);
 		server_redraw_session_group(s);
diff --git a/cmd-rename-window.c b/cmd-rename-window.c
index 89dfdf..801407 100644
--- a/cmd-rename-window.c
+++ b/cmd-rename-window.c
@@ -50,6 +50,7 @@ cmd_rename_window_exec(struct cmd *self, struct cmdq_item *item)
 
 	window_set_name(wl->window, args->argv[0]);
 	options_set_number(wl->window->options, "automatic-rename", 0);
+	options_set_number(wl->window->options, "user-renamed", 1);
 
 	server_status_window(wl->window);
 
diff --git a/input.c b/input.c
index 0b6673..05741b 100644
--- a/input.c
+++ b/input.c
@@ -1956,6 +1956,8 @@ input_exit_rename(struct input_ctx *ictx)
 		return;
 	if (!options_get_number(ictx->wp->window->options, "allow-rename"))
 		return;
+	if (options_get_number(ictx->wp->window->options, "user-renamed") != 0)
+		return;
 	log_debug("%s: \"%s\"", __func__, ictx->input_buf);
 
 	window_set_name(ictx->wp->window, ictx->input_buf);
diff --git a/options-table.c b/options-table.c
index 403509..0fa4d5 100644
--- a/options-table.c
+++ b/options-table.c
@@ -725,6 +725,12 @@ const struct options_table_entry options_table[] = {
 	  .default_num = 0
 	},
 
+	{ .name = "user-renamed",
+	  .type = OPTIONS_TABLE_FLAG,
+	  .scope = OPTIONS_TABLE_WINDOW,
+	  .default_num = 0
+	},
+
 	{ .name = "window-active-style",
 	  .type = OPTIONS_TABLE_STYLE,
 	  .scope = OPTIONS_TABLE_WINDOW,
-- 
2.10.2

