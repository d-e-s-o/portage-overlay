From e4c80f3e5bd305529a04ca41008595992c065bca Mon Sep 17 00:00:00 2001
From: xaizek <xaizek@posteo.net>
Date: Sat, 4 Jan 2020 19:40:24 +0200
Subject: [PATCH] Fix positioning of hardware cursor

After startup and switching panes.

Got broken in 0.10.1 by commit 1a5a0571c37cdc81fcfeb7cba763844cd9591320:

    Fix item not being redrawn on selection toggle

    Using `t` key didn't update the state of the item on the screen.

    [...]

Thanks to Daniel Mueller (a.k.a. d-e-s-o).

Closes #503 on GitHub.
---
 src/ui/fileview.c | 14 ++++++++++++--
 1 file changed, 12 insertions(+), 2 deletions(-)

diff --git a/src/ui/fileview.c b/src/ui/fileview.c
index cf5f56..b62b21 100644
--- a/src/ui/fileview.c
+++ b/src/ui/fileview.c
@@ -823,8 +823,8 @@ void
 fview_cursor_redraw(view_t *view)
 {
 	/* fview_cursor_redraw() is also called in situations when file list has
-	 * changed, so just let fview_position_updated() deal with it.  With a cache
-	 * of last position, it should be fine. */
+	 * changed, let fview_position_updated() deal with it.  With a cache of last
+	 * position, it should be fine. */
 	fview_position_updated(view);
 
 	/* Always redrawing the cell won't hurt and will account for the case when
@@ -842,6 +842,10 @@ fview_cursor_redraw(view_t *view)
 			redraw_cell(view, view->top_line, view->curr_line, 0);
 		}
 		redraw_cell(view, view->top_line, view->curr_line, 1);
+
+		/* redraw_cell() naturally moves hardware cursor after current entry (to the
+		 * next line when not in ls-like view).  Fix it up. */
+		position_hardware_cursor(view);
 	}
 }
 
@@ -1895,6 +1899,12 @@ position_hardware_cursor(view_t *view)
 		.prefix_len = &prefix_len,
 	};
 
+	if(cdt.entry == NULL)
+	{
+		/* Happens in tests. */
+		return;
+	}
+
 	calculate_table_conf(view, &col_count, &col_width);
 	current_line = view->curr_line/col_count;
 	column_offset = ui_view_left_reserved(view)
-- 
2.24.1

