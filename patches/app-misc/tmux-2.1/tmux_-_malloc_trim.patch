commit e850d40ff8b616214dd6aaf33237752c8db59bd6
Author: deso <deso@posteo.net>
Date:   Fri Dec 11 18:49:06 2015 -0800

    reduce memory footprint by employing malloc_trim
    
    When tmux is used in conjunction with a lot of sessions/windows with a
    potentially huge history, memory usage by tmux can become excessive.
    Apparently, this it's less the fact that tmux is a memory hog or that it
    actually leaks but rather that glibc's malloc fails to free the memory
    back to the system in a timely manner.
    This change employs malloc_trim(3) to advice glibc to free memory back
    to the system in an attempt to reduce the overall memory footprint. The
    patch was originally devised by 42wim [1] and slightly adapted to work
    with more recent versions of tmux.
    
    [1] http://blog.42.be/2015/02/tmux-memory-usage-on-linux.html

diff --git a/grid.c b/grid.c
index 99dafa..c57c93 100644
--- a/grid.c
+++ b/grid.c
@@ -20,6 +20,9 @@
 
 #include <stdlib.h>
 #include <string.h>
+#ifdef __GLIBC__
+# include <malloc.h>
+#endif
 
 #include "tmux.h"
 
@@ -104,6 +107,10 @@ grid_destroy(struct grid *gd)
 	free(gd->linedata);
 
 	free(gd);
+
+#ifdef M_TRIM_THRESHOLD
+	malloc_trim(0);
+#endif
 }
 
 /* Compare grids. */
@@ -177,6 +184,10 @@ grid_clear_history(struct grid *gd)
 	grid_clear_lines(gd, 0, gd->hsize);
 	grid_move_lines(gd, 0, gd->hsize, gd->sy);
 
+#ifdef M_TRIM_THRESHOLD
+	malloc_trim(0);
+#endif
+
 	gd->hsize = 0;
 	gd->linedata = xreallocarray(gd->linedata, gd->sy,
 	    sizeof *gd->linedata);
