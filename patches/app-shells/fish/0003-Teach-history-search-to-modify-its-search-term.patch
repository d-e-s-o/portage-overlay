From f96075c76343bd4291521ef5ca2ccce13cf1c7d9 Mon Sep 17 00:00:00 2001
From: Johannes Altmanninger <aclopte@gmail.com>
Date: Sun, 9 Feb 2020 18:39:14 +0100
Subject: [PATCH 03/15] Teach history search to modify its search term

---
 src/history.cpp | 14 ++++++++++++++
 src/history.h   | 11 +++++++----
 2 files changed, 21 insertions(+), 4 deletions(-)

diff --git a/src/history.cpp b/src/history.cpp
index 886628..044fd4 100644
--- a/src/history.cpp
+++ b/src/history.cpp
@@ -682,6 +682,20 @@ maybe_t<size_t> history_search_t::go_to_next_match(history_search_direction_t di
     return none_t();
 }
 
+maybe_t<size_t> history_search_t::modify_search_term(std::function<void(wcstring &)> &&change,
+                                                     maybe_t<size_t> preferred_match_offset) {
+    change(orig_term_);
+    canon_term_ = orig_term_;
+    if (ignores_case()) {
+        std::transform(canon_term_.begin(), canon_term_.end(), canon_term_.begin(), towlower);
+    }
+    if (!current_item_) {
+        return none_t();
+    }
+    return current_item().matches_search(canon_term_, search_type_, !ignores_case(),
+                                         preferred_match_offset);
+}
+
 const history_item_t &history_search_t::current_item() const {
     assert(current_item_ && "No current item");
     return *current_item_;
diff --git a/src/history.h b/src/history.h
index d7b5e7..bbfa80 100644
--- a/src/history.h
+++ b/src/history.h
@@ -284,6 +284,11 @@ class history_search_t {
     // Returns the offset of the match within the commandline if found.
     maybe_t<size_t> go_to_next_match(history_search_direction_t direction);
 
+    // Update the search term. Returns the match offset, if the current item matches the new term.
+    // The given match offset is tried first, see history_item_t::matches_search.
+    maybe_t<size_t> modify_search_term(std::function<void(wcstring &)> &&change,
+                                       maybe_t<size_t> preferred_match_offset);
+
     // Returns the current search result item. asserts if there is no current item.
     const history_item_t &current_item() const;
 
@@ -295,10 +300,8 @@ class history_search_t {
     history_search_t(history_t *hist, const wcstring &str,
                      enum history_search_type_t type = history_search_type_t::contains,
                      history_search_flags_t flags = 0)
-        : history_(hist), orig_term_(str), canon_term_(str), search_type_(type), flags_(flags) {
-        if (ignores_case()) {
-            std::transform(canon_term_.begin(), canon_term_.end(), canon_term_.begin(), towlower);
-        }
+        : history_(hist), orig_term_(str), search_type_(type), flags_(flags) {
+        modify_search_term([](wcstring &) {}, none_t());
     }
 
     // Construct from a shared_ptr. TODO: this should be the only constructor.
-- 
2.26.3

