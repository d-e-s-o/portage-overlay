From cb4bca9ea85ed2d7a0fe27d90656a498a2cea165 Mon Sep 17 00:00:00 2001
From: Daniel Mueller <deso@posteo.net>
Date: Sat, 30 Sep 2017 09:16:27 -0700
Subject: [PATCH 05/15] i3bar: Draw indication whether workspaces have windows
 or not

Awesome has the nice feature that it will indicate on each workspace
whether it contains windows or not by drawing a small rectangle along
with the workspace indication in the bar.
This change sets out to make i3 behave the same way. To accomplish this
task we introduce a new property, 'has_children', to the workspaces IPC
command that is indicative of whether a workspace has windows or not. We
then adjust i3 to inform IPC clients of workspace changes whenever a new
windows is created, destroyed, or moved to a different workspace.
---
 i3bar/include/workspaces.h |  1 +
 i3bar/src/workspaces.c     |  7 +++++++
 i3bar/src/xcb.c            | 19 +++++++++++++++++--
 src/con.c                  |  1 +
 src/handlers.c             |  2 ++
 src/ipc.c                  | 10 ++++++++++
 6 files changed, 38 insertions(+), 2 deletions(-)

diff --git a/i3bar/include/workspaces.h b/i3bar/include/workspaces.h
index e1f9e8..32e4d6 100644
--- a/i3bar/include/workspaces.h
+++ b/i3bar/include/workspaces.h
@@ -37,6 +37,7 @@ struct i3_ws {
     bool visible;             /* If the ws is currently visible on an output */
     bool focused;             /* If the ws is currently focused */
     bool urgent;              /* If the urgent hint of the ws is set */
+    bool has_children;        /* If the current ws has children (i.e, windows) */
     rect rect;                /* The rect of the ws (not used (yet)) */
     struct i3_output *output; /* The current output of the ws */
 
diff --git a/i3bar/src/workspaces.c b/i3bar/src/workspaces.c
index 233249..821141 100644
--- a/i3bar/src/workspaces.c
+++ b/i3bar/src/workspaces.c
@@ -49,6 +49,12 @@ static int workspaces_boolean_cb(void *params_, int val) {
         return 1;
     }
 
+    if (!strcmp(params->cur_key, "has_children")) {
+        params->workspaces_walk->has_children = val;
+        FREE(params->cur_key);
+        return 1;
+    }
+
     FREE(params->cur_key);
 
     return 0;
@@ -180,6 +186,7 @@ static int workspaces_start_map_cb(void *params_) {
         new_workspace->visible = 0;
         new_workspace->focused = 0;
         new_workspace->urgent = 0;
+        new_workspace->has_children = 0;
         memset(&new_workspace->rect, 0, sizeof(rect));
         new_workspace->output = NULL;
 
diff --git a/i3bar/src/xcb.c b/i3bar/src/xcb.c
index fed969..fa7e5e 100644
--- a/i3bar/src/xcb.c
+++ b/i3bar/src/xcb.c
@@ -2002,10 +2002,25 @@ void draw_bars(bool unhide) {
                                     font.height + 2 * logical_px(ws_voff_px) - 4 * logical_px(1));
 
                 draw_util_text(ws_walk->name, &(outputs_walk->buffer), fg_color, bg_color,
-                               workspace_width + logical_px(ws_hoff_px) + logical_px(1),
-                               logical_px(ws_voff_px),
+                               workspace_width + logical_px(ws_hoff_px) + logical_px(4),
+                               logical_px(ws_voff_px + 2),
                                ws_walk->name_width);
 
+                if (ws_walk->has_children) {
+                    color_t rect_color = draw_util_hex_to_color("#ffffff");
+                    draw_util_rectangle(&(outputs_walk->buffer), rect_color,
+                                        workspace_width + logical_px(1),
+                                        2 * logical_px(1),
+                                        logical_px(6), logical_px(6));
+
+                    if (!ws_walk->visible) {
+                         draw_util_rectangle(&(outputs_walk->buffer), bg_color,
+                                             workspace_width + logical_px(2),
+                                             2 * logical_px(1) + logical_px(1),
+                                             logical_px(4), logical_px(4));
+                    }
+                }
+
                 workspace_width += 2 * logical_px(ws_hoff_px) + 2 * logical_px(1) + ws_walk->name_width;
                 if (TAILQ_NEXT(ws_walk, tailq) != NULL)
                     workspace_width += logical_px(ws_spacing_px);
diff --git a/src/con.c b/src/con.c
index 732437..d7a2b0 100644
--- a/src/con.c
+++ b/src/con.c
@@ -1218,6 +1218,7 @@ static bool _con_move_to_con(Con *con, Con *target, bool behind_focused, bool fi
     CALL(parent, on_remove_child);
 
     ipc_send_window_event("move", con);
+    ipc_send_workspace_event("reload", NULL, NULL);
     ewmh_update_wm_desktop();
     return true;
 }
diff --git a/src/handlers.c b/src/handlers.c
index 3140e4..67a12d 100644
--- a/src/handlers.c
+++ b/src/handlers.c
@@ -266,6 +266,7 @@ static void handle_map_request(xcb_map_request_event_t *event) {
     add_ignore_event(event->sequence, -1);
 
     manage_window(event->window, cookie, false);
+    ipc_send_workspace_event("reload", NULL, NULL);
     return;
 }
 
@@ -520,6 +521,7 @@ static void handle_unmap_notify_event(xcb_unmap_notify_event_t *event) {
 
     tree_close_internal(con, DONT_KILL_WINDOW, false, false);
     tree_render();
+    ipc_send_workspace_event("reload", NULL, NULL);
 
 ignore_end:
     /* If the client (as opposed to i3) destroyed or unmapped a window, an
diff --git a/src/ipc.c b/src/ipc.c
index 759665..85fa14 100644
--- a/src/ipc.c
+++ b/src/ipc.c
@@ -307,6 +307,13 @@ void dump_node(yajl_gen gen, struct Con *con, bool inplace_restart) {
     ystr("urgent");
     y(bool, con->urgent);
 
+    /*
+     * We do not expose the newly introduced 'has_children' property
+     * here. It is only part of the 'get_workspaces' command in an
+     * attempt to not break functionality relying on i3-save-tree or the
+     * like.
+     */
+
     if (!TAILQ_EMPTY(&(con->marks_head))) {
         ystr("marks");
         y(array_open);
@@ -815,6 +822,9 @@ IPC_HANDLER(get_workspaces) {
             ystr("urgent");
             y(bool, ws->urgent);
 
+            ystr("has_children");
+            y(bool, con_has_children(ws));
+
             y(map_close);
         }
     }
-- 
2.13.6

